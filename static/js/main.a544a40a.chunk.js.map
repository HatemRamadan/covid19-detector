{"version":3,"sources":["components/Info.js","components/Questions.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","appBar","backgroundColor","app","height","textColor","color","mainAction","startButton","paddingLeft","paddingRight","classes","setPageNr","Grid","container","direction","justify","alignItems","Box","mt","src","alt","mr","Typography","variant","className","Select","style","Object","keys","countries","map","code","name","country","MenuItem","key","value","Button","size","onClick","createMuiTheme","typography","h3","fontSize","breakpoints","up","item","xs","mb","q","i","ThemeProvider","RadioGroup","onChange","FormControlLabel","control","Radio","label","useState","pageNr","page","setPage","renderRules","Checkbox","useEffect","Info","AppBar","position","Toolbar","IconButton","edge","aria-label","overflow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a544a40a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport countries from \"countries-list\";\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport {Typography,Grid, Box, Checkbox, MenuItem, Select, Button } from '@material-ui/core';\n\nconst styles = (theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      backgroundColor: '#3BCCBB'\n    },\n    app: {\n      backgroundColor: '#2276DF',\n      height: '100vh'\n    },\n    textColor: {\n      color: '#ffffff'\n    },\n    mainAction: {\n      backgroundColor: '#3BCCBB'\n    },\n    startButton: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  });\n\nconst renderInfo = ({classes, setPageNr}) => {\n    const renderMenuItems = () => {\n        const countryCodes = Object.keys(countries.countries);\n        const countryNames = countryCodes.map(code => countries.countries[code].name);\n    return countryNames.map( country => <MenuItem key={country} value={country}>{country}</MenuItem>)\n    }\n\n    return (\n      <div>\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <Box mt={6}>\n            <img src='logo.png' alt=\"logo\"/>\n          </Box>\n          <Box mt={8}>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              <Box mr={4}>\n                 <Typography variant=\"h4\" className={classes.textColor}>Country</Typography>\n              </Box>\n              <Select style={{backgroundColor: 'white', paddingRight: '20px', paddingLeft: '20px'}}>\n              {renderMenuItems()}\n              </Select>\n            </Grid>\n          </Box>\n          <Box mt={3}>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              <Box mr={4}>\n                 <Typography variant=\"h4\" className={classes.textColor}>Gender&nbsp;</Typography>\n              </Box>\n              <Select style={{backgroundColor: 'white', paddingRight: '20px', paddingLeft: '20px'}}>\n                <MenuItem  value=\"male\">male</MenuItem>\n                <MenuItem  value=\"female\">female</MenuItem>\n\n              </Select>\n            </Grid>\n          </Box>\n          <Box mt={3}>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              <Box mr={4}>\n                 <Typography variant=\"h4\" className={classes.textColor}>{'Age'}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Typography>\n              </Box>\n              <Select style={{backgroundColor: 'white', paddingRight: '20px', paddingLeft: '20px'}}>\n              <MenuItem  value=\"1-19\">1-19</MenuItem>\n              <MenuItem  value=\"20-39\">20-39</MenuItem>\n              <MenuItem  value=\"40-59\">40-59</MenuItem>\n              <MenuItem  value=\"60+\">60+</MenuItem>\n\n              </Select>\n            </Grid>\n          </Box>\n          <Box mt={3}>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              <Button size=\"large\" className={`${classes.mainAction} ${classes.textColor} ${classes.startButton}`} onClick={()=>setPageNr(3)}>Start Test</Button>\n            </Grid>\n          </Box>\n        </Grid>\n      </div>\n    )\n  }\n\n  export default withStyles(styles)(renderInfo);\n","import React, {useState, useEffect} from 'react';\nimport countries from \"countries-list\";\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport {Typography,Grid, Box, Checkbox, MenuItem, Select, Button, RadioGroup, FormControlLabel, Radio, ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme();\n\ntheme.typography.h3 = {\n  fontSize: '18px',\n  '@media (min-width:600px)': {\n    fontSize: '24px',\n  },\n  [theme.breakpoints.up('md')]: {\n    fontSize: '30px',\n  },\n};\nconst styles = (theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      backgroundColor: '#3BCCBB'\n    },\n    app: {\n      backgroundColor: '#2276DF',\n      height: '100vh'\n    },\n    textColor: {\n      color: '#ffffff'\n    },\n    mainAction: {\n      backgroundColor: '#3BCCBB'\n    },\n    startButton: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  });\n\nconst Questions = ({classes, setPageNr}) => {\n\n    const renderQuestions = () => {\n        const qs = [\"1- Is your body temperature higher than 38°C ?\",\n                \"2- Do you have dry cough?\",\n                \"3- Do you have a sore throat?\",\n                \"4- Are you suffering from diarrhea or vomiting?\",\n                \"5- Do you have any chronic disease?\",\n                \"6- Did you travel abroad within the past 14 days?\",\n                \"7- Did you have a close contact with acute respiratory infection patient?\",\n                \"8- Have you visited a medical facility that had a confirmed COVID-19 case?\",\n                \"9- Are you an employee in the medical sector or in quarantine?\"];\n        return qs.map( (q,i) => \n            <Box mt={6} key={i} className={classes.textColor}>\n            <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\n               <ThemeProvider theme={theme}>\n              <Typography variant=\"h3\">{q}</Typography>\n              </ThemeProvider>\n                <RadioGroup name=\"q1\" onChange={()=>{}}>\n                    <FormControlLabel value=\"yes\" control={<Radio style ={{ color: \"white\"}} />} label=\"Yes\" />\n                    <FormControlLabel value=\"no\" control={<Radio style ={{ color: \"white\"}} />} label=\"No\" />\n                </RadioGroup>\n            </Grid>\n          </Box>\n        )        \n    }\n    return (\n      <div>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item xs={1} ></Grid>\n        <Grid item xs={8} container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <Box mt={4} mb={4}>\n            <img src='logo.png' alt=\"logo\"/>\n          </Box>\n          </Grid>\n\n          {renderQuestions()}\n          <Grid item xs container direction=\"row\" justify=\"center\" alignItems=\"center\">\n      <Box mt={4}>\n        <Button size=\"large\" className={`${classes.mainAction} ${classes.textColor} ${classes.startButton}`} onClick={()=>setPageNr(4)}>\n          <Typography variant=\"h5\">Check Results</Typography>\n        </Button>\n      </Box>\n    </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n\n  export default withStyles(styles)(Questions);\n","import React, {useState, useEffect} from 'react';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, IconButton, Typography, Button, Grid, Box, Checkbox, MenuItem, Select } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Info from './components/Info';\nimport Questions from 'components/Questions';\n\nconst styles = (theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      backgroundColor: '#3BCCBB'\n    },\n    app: {\n      backgroundColor: '#2276DF',\n      height: '100vh'\n    },\n    textColor: {\n      color: '#ffffff'\n    },\n    mainAction: {\n      backgroundColor: '#3BCCBB'\n    },\n    startButton: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  });\n  \nconst App = ({classes}) => {\n\n  const [pageNr, setPageNr] = useState(1);\n  const [page, setPage] = useState();\n\n  const renderRules = () => {\n    return(\n      <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n    <Grid item xs={1} ></Grid> \n    <Grid item xs={6} container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n    <Box mt={6}>\n      <img src='logo.png' alt=\"logo\"/>\n    </Box>\n  </Grid>  \n  <Box mt={4}>\n    <Typography variant=\"h6\" className={classes.textColor}>\n      This test is designed upon the most updated guidelines by CDC &quot;Centers for Disease Control and Prevention&quot;\n    </Typography>\n    <Box mt={4}>\n      <Typography variant=\"h6\" className={classes.textColor}>\n        The purpose of the Coronavirus Self-Checker is to help you make decisions about seeking appropriate medical care. This system is not intended for the diagnosis or treatment of disease or other conditions, including COVID-19.\n      </Typography>\n    </Box>\n    <Box mt={2}>\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n        <Checkbox style ={{ color: \"#3BCCBB\"}} ></Checkbox>\n        <Box mt={1}>\n          <Typography variant=\"h5\" className={classes.textColor}>\n            I agree \n          </Typography>\n        </Box>\n      </Grid>\n    </Box>\n    <Grid item xs container direction=\"row\" justify=\"center\" alignItems=\"center\">\n      <Box mt={4}>\n        <Button size=\"large\" className={`${classes.mainAction} ${classes.textColor} ${classes.startButton}`} onClick={()=>setPageNr(2)}>\n          <Typography variant=\"h5\">Start</Typography>\n        </Button>\n      </Box>\n    </Grid>\n  </Box>\n  </Grid>\n  </Grid>\n  </div>\n  );\n  }\n  useEffect(()=>{\n    switch(pageNr){\n      case 1 : setPage(renderRules());break;\n      case 2 : setPage(<Info classes={classes} setPageNr={setPageNr}></Info>);break;\n      case 3 : setPage(<Questions classes={classes} setPageNr={setPageNr}></Questions>);break;\n      case 4: setPage(<div>Results</div>);break;\n      default : return;\n    }\n  },[pageNr])\n  return (\n    <div className={classes.root} >\n      <AppBar className={classes.appBar} position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon/>\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          COV19 Detector\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    <div className={classes.app} style={{overflow: 'scroll', height: '100vh'}}>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Box mb={4}>\n          {page || renderRules()}\n        </Box>\n      </Grid>\n    </div>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}