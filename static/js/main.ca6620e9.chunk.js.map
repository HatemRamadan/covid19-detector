{"version":3,"sources":["components/Info.js","components/Questions.js","components/Results.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","appBar","backgroundColor","app","height","textColor","color","mainAction","startButton","paddingLeft","paddingRight","classes","setPageNr","Grid","container","direction","justify","alignItems","Box","mt","src","alt","mr","Typography","variant","className","Select","style","Object","keys","countries","map","code","name","country","MenuItem","key","value","Button","size","onClick","createMuiTheme","typography","h3","fontSize","breakpoints","up","setResult","useState","score","setScore","item","xs","mb","q","i","ThemeProvider","RadioGroup","onChange","e","answer","nr","newScore","console","log","handleChange","target","split","FormControlLabel","control","Radio","label","reduce","a","b","result","pageNr","page","setPage","renderRules","Checkbox","useEffect","Info","AppBar","position","Toolbar","IconButton","edge","aria-label","overflow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ca6620e9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport countries from \"countries-list\";\nimport { createStyles, withStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Grid,\n  Box,\n  Checkbox,\n  MenuItem,\n  Select,\n  Button,\n} from \"@material-ui/core\";\n\nconst styles = (theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      backgroundColor: \"#3BCCBB\",\n    },\n    app: {\n      backgroundColor: \"#2276DF\",\n      height: \"100vh\",\n    },\n    textColor: {\n      color: \"#ffffff\",\n    },\n    mainAction: {\n      backgroundColor: \"#3BCCBB\",\n    },\n    startButton: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6),\n    },\n  });\n\nconst renderInfo = ({ classes, setPageNr }) => {\n  const renderMenuItems = () => {\n    const countryCodes = Object.keys(countries.countries);\n    const countryNames = countryCodes.map(\n      (code) => countries.countries[code].name\n    );\n    return countryNames.map((country) => (\n      <MenuItem key={country} value={country}>\n        {country}\n      </MenuItem>\n    ));\n  };\n\n  return (\n    <div>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Box mt={6}>\n          <img src=\"logo.png\" alt=\"logo\" />\n        </Box>\n        <Box mt={8}>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Box mr={4}>\n              <Typography variant=\"h4\" className={classes.textColor}>\n                Country\n              </Typography>\n            </Box>\n            <Select\n              style={{\n                backgroundColor: \"white\",\n                paddingRight: \"20px\",\n                paddingLeft: \"20px\",\n              }}\n            >\n              {renderMenuItems()}\n            </Select>\n          </Grid>\n        </Box>\n        <Box mt={3}>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Box mr={4}>\n              <Typography variant=\"h4\" className={classes.textColor}>\n                Gender&nbsp;\n              </Typography>\n            </Box>\n            <Select\n              style={{\n                backgroundColor: \"white\",\n                paddingRight: \"20px\",\n                paddingLeft: \"20px\",\n              }}\n            >\n              <MenuItem value=\"male\">male</MenuItem>\n              <MenuItem value=\"female\">female</MenuItem>\n            </Select>\n          </Grid>\n        </Box>\n        <Box mt={3}>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Box mr={4}>\n              <Typography variant=\"h4\" className={classes.textColor}>\n                {\"Age\"}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              </Typography>\n            </Box>\n            <Select\n              style={{\n                backgroundColor: \"white\",\n                paddingRight: \"20px\",\n                paddingLeft: \"20px\",\n              }}\n            >\n              <MenuItem value=\"1-19\">1-19</MenuItem>\n              <MenuItem value=\"20-39\">20-39</MenuItem>\n              <MenuItem value=\"40-59\">40-59</MenuItem>\n              <MenuItem value=\"60+\">60+</MenuItem>\n            </Select>\n          </Grid>\n        </Box>\n        <Box mt={3}>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Button\n              size=\"large\"\n              className={`${classes.mainAction} ${classes.textColor} ${classes.startButton}`}\n              onClick={() => setPageNr(3)}\n            >\n              Start Test\n            </Button>\n          </Grid>\n        </Box>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(renderInfo);\n","import React, { useState, useEffect } from \"react\";\nimport countries from \"countries-list\";\nimport { createStyles, withStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Grid,\n  Box,\n  Button,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme();\n\ntheme.typography.h3 = {\n  fontSize: \"18px\",\n  \"@media (min-width:600px)\": {\n    fontSize: \"24px\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"30px\",\n  },\n};\nconst styles = (theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      backgroundColor: \"#3BCCBB\",\n    },\n    app: {\n      backgroundColor: \"#2276DF\",\n      height: \"100vh\",\n    },\n    textColor: {\n      color: \"#ffffff\",\n    },\n    mainAction: {\n      backgroundColor: \"#3BCCBB\",\n    },\n    startButton: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6),\n    },\n  });\n\nconst Questions = ({ classes, setPageNr, setResult }) => {\n  const [score, setScore] = useState([-1, -1, -1, -1, -1, -1, -1, -1]);\n  const onSubmit = () => {\n    console.log(score);\n    setResult(score.reduce((a, b) => a + b, 0));\n    setPageNr(4);\n  };\n  const handleChange = (answer, nr) => {\n    const newScore = [...score];\n    console.log(answer);\n    switch (nr) {\n      case 1:\n        {\n          newScore[nr] = answer === \"yes\" ? 2 : 0;\n          setScore(newScore);\n        }\n        break;\n      case 2:\n        {\n          newScore[nr] = answer === \"yes\" ? 2 : 0;\n          setScore(newScore);\n        }\n        break;\n      case 3:\n        {\n          newScore[nr] = answer === \"yes\" ? 1 : 0;\n          setScore(newScore);\n        }\n        break;\n      case 4:\n        {\n          newScore[nr] = 0;\n          setScore(newScore);\n        }\n        break;\n      case 5:\n        {\n          newScore[nr] = answer === \"yes\" ? 1 : 0;\n          setScore(newScore);\n        }\n        break;\n      case 6:\n        {\n          newScore[nr] = answer === \"yes\" ? 5 : 0;\n          setScore(newScore);\n        }\n        break;\n      case 7:\n        {\n          newScore[nr] = answer === \"yes\" ? 4 : 0;\n          setScore(newScore);\n        }\n        break;\n      case 8:\n        {\n          newScore[nr] = answer === \"yes\" ? 3 : 0;\n          setScore(newScore);\n        }\n        break;\n      default:\n        {\n          newScore[nr] = answer === \"yes\" ? 2 : 0;\n          setScore(newScore);\n        }\n        break;\n    }\n  };\n  const renderQuestions = () => {\n    const qs = [\n      \"1- Is your body temperature higher than 38°C ?\",\n      \"2- Do you have dry cough?\",\n      \"3- Do you have a sore throat?\",\n      \"4- Are you suffering from diarrhea or vomiting?\",\n      \"5- Do you have any chronic disease?\",\n      \"6- Did you travel abroad within the past 14 days?\",\n      \"7- Did you have a close contact with acute respiratory infection patient?\",\n      \"8- Have you visited a medical facility that had a confirmed COVID-19 case?\",\n      \"9- Are you an employee in the medical sector or in quarantine?\",\n    ];\n    return qs.map((q, i) => (\n      <Box mt={6} key={i} className={classes.textColor}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <ThemeProvider theme={theme}>\n            <Typography variant=\"h3\">{q}</Typography>\n          </ThemeProvider>\n          <RadioGroup\n            name=\"q1\"\n            onChange={(e) => handleChange(e.target.value, q.split(\"-\")[0])}\n          >\n            <FormControlLabel\n              value=\"yes\"\n              control={<Radio style={{ color: \"white\" }} />}\n              label=\"Yes\"\n            />\n            <FormControlLabel\n              value=\"no\"\n              control={<Radio style={{ color: \"white\" }} />}\n              label=\"No\"\n            />\n          </RadioGroup>\n        </Grid>\n      </Box>\n    ));\n  };\n  return (\n    <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={1}></Grid>\n        <Grid\n          item\n          xs={8}\n          container\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Box mt={4} mb={4}>\n              <img src=\"logo.png\" alt=\"logo\" />\n            </Box>\n          </Grid>\n\n          {renderQuestions()}\n          <Grid\n            item\n            xs\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Box mt={4}>\n              <Button\n                size=\"large\"\n                className={`${classes.mainAction} ${classes.textColor} ${classes.startButton}`}\n                onClick={onSubmit}\n              >\n                <Typography variant=\"h5\">Check Results</Typography>\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Questions);\n","import React, { useState, useEffect } from \"react\";\nimport countries from \"countries-list\";\nimport { createStyles, withStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Grid,\n  Box,\n  Button,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme();\n\ntheme.typography.h3 = {\n  fontSize: \"18px\",\n  \"@media (min-width:600px)\": {\n    fontSize: \"24px\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"30px\",\n  },\n};\nconst styles = (theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      backgroundColor: \"#3BCCBB\",\n    },\n    app: {\n      backgroundColor: \"#2276DF\",\n      height: \"100vh\",\n    },\n    textColor: {\n      color: \"#ffffff\",\n    },\n    mainAction: {\n      backgroundColor: \"#3BCCBB\",\n    },\n    startButton: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6),\n    },\n  });\n\nconst Results = ({ classes, setPageNr, result }) => {\n  const renderResult = () => {\n    const rs = [\n      \"1- Is your body temperature higher than 38°C ?\",\n      \"2- Do you have dry cough?\",\n      \"3- Do you have a sore throat?\",\n      \"4- Are you suffering from diarrhea or vomiting?\",\n      \"5- Do you have any chronic disease?\",\n      \"6- Did you travel abroad within the past 14 days?\",\n      \"7- Did you have a close contact with acute respiratory infection patient?\",\n      \"8- Have you visited a medical facility that had a confirmed COVID-19 case?\",\n      \"9- Are you an employee in the medical sector or in quarantine?\",\n    ];\n    return rs.map((q, i) => (\n      <Box mt={6} key={i} className={classes.textColor}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <ThemeProvider theme={theme}>\n            <Typography variant=\"h3\">{q}</Typography>\n          </ThemeProvider>\n          <RadioGroup name=\"q1\" onChange={() => {}}>\n            <FormControlLabel\n              value=\"yes\"\n              control={<Radio style={{ color: \"white\" }} />}\n              label=\"Yes\"\n            />\n            <FormControlLabel\n              value=\"no\"\n              control={<Radio style={{ color: \"white\" }} />}\n              label=\"No\"\n            />\n          </RadioGroup>\n        </Grid>\n      </Box>\n    ));\n  };\n  return (\n    <div>\n      {result}\n      {/* <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={1}></Grid>\n        <Grid\n          item\n          xs={8}\n          container\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Box mt={4} mb={4}>\n              <img src=\"logo.png\" alt=\"logo\" />\n            </Box>\n          </Grid>\n\n          {renderResult()}\n          {result}\n          <Grid\n            item\n            xs\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Box mt={4}>\n              <Button\n                size=\"large\"\n                className={`${classes.mainAction} ${classes.textColor} ${classes.startButton}`}\n                onClick={() => setPageNr(4)}\n              >\n                <Typography variant=\"h5\">Okay</Typography>\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid> */}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Results);\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, withStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  Grid,\n  Box,\n  Checkbox,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Info from \"./components/Info\";\nimport Questions from \"components/Questions\";\nimport Results from \"components/Results\";\n\nconst styles = (theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      backgroundColor: \"#3BCCBB\",\n    },\n    app: {\n      backgroundColor: \"#2276DF\",\n      height: \"100vh\",\n    },\n    textColor: {\n      color: \"#ffffff\",\n    },\n    mainAction: {\n      backgroundColor: \"#3BCCBB\",\n    },\n    startButton: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6),\n    },\n  });\n\nconst App = ({ classes }) => {\n  const [pageNr, setPageNr] = useState(1);\n  const [page, setPage] = useState();\n  const [result, setResult] = useState();\n\n  const renderRules = () => {\n    return (\n      <div>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid item xs={1}></Grid>\n          <Grid\n            item\n            xs={6}\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Box mt={6}>\n                <img src=\"logo.png\" alt=\"logo\" />\n              </Box>\n            </Grid>\n            <Box mt={4}>\n              <Typography variant=\"h6\" className={classes.textColor}>\n                This test is designed upon the most updated guidelines by CDC\n                &quot;Centers for Disease Control and Prevention&quot;\n              </Typography>\n              <Box mt={4}>\n                <Typography variant=\"h6\" className={classes.textColor}>\n                  The purpose of the Coronavirus Self-Checker is to help you\n                  make decisions about seeking appropriate medical care. This\n                  system is not intended for the diagnosis or treatment of\n                  disease or other conditions, including COVID-19.\n                </Typography>\n              </Box>\n              <Box mt={2}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"flex-start\"\n                >\n                  <Checkbox style={{ color: \"#3BCCBB\" }}></Checkbox>\n                  <Box mt={1}>\n                    <Typography variant=\"h5\" className={classes.textColor}>\n                      I agree\n                    </Typography>\n                  </Box>\n                </Grid>\n              </Box>\n              <Grid\n                item\n                xs\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Box mt={4}>\n                  <Button\n                    size=\"large\"\n                    className={`${classes.mainAction} ${classes.textColor} ${classes.startButton}`}\n                    onClick={() => setPageNr(2)}\n                  >\n                    <Typography variant=\"h5\">Start</Typography>\n                  </Button>\n                </Box>\n              </Grid>\n            </Box>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  };\n  useEffect(() => {\n    switch (pageNr) {\n      case 1:\n        setPage(renderRules());\n        break;\n      case 2:\n        setPage(<Info classes={classes} setPageNr={setPageNr}></Info>);\n        break;\n      case 3:\n        setPage(\n          <Questions\n            classes={classes}\n            setPageNr={setPageNr}\n            setResult={setResult}\n          ></Questions>\n        );\n        break;\n      case 4:\n        setPage(<Results result={result} setPageNr={setPageNr}></Results>);\n        break;\n      default:\n        return;\n    }\n  }, [pageNr]);\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            COV19 Detector\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div\n        className={classes.app}\n        style={{ overflow: \"scroll\", height: \"100vh\" }}\n      >\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <Box mb={4}>{page || renderRules()}</Box>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}